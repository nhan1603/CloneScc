// Code generated by mockery v2.20.0. DO NOT EDIT.

package simulator

import (
	context "context"

	model "github.com/nhan1603/CloneScc/api/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// MockController is an autogenerated mock type for the Controller type
type MockController struct {
	mock.Mock
}

// SendMessage provides a mock function with given fields: ctx, message
func (_m *MockController) sendMessage(ctx context.Context, message model.AlertMessage) error {
	ret := _m.Called(ctx, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.AlertMessage) error); ok {
		r0 = rf(ctx, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Simulate provides a mock function with given fields: ctx
func (_m *MockController) Simulate(ctx context.Context) {
	_m.Called(ctx)
}

type mockConstructorTestingTNewMockController interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockController creates a new instance of MockController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockController(t mockConstructorTestingTNewMockController) *MockController {
	mock := &MockController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
